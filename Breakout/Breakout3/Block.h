#ifndef BLOCK_H_
#define BLOCK_H_

/****************************************************
	header
*****************************************************/
#include "ObjectType.h"

/****************************************************
	class
*****************************************************/

/*
	ブロッククラス
*/
class Block
{
	// ブロックの更新ステップ
	enum class BlockStep
	{
		InitStep,		// 初期化ステップ
		DrawStep,		// 描画ステップ
		ReleaseStep,	// 解放ステップ
	};

public:
	/***************************************************************
		コンストラクター
	****************************************************************/
	Block();

	/***************************************************************
		デストラクター
	****************************************************************/
	~Block()
	{}

	/***************************************************************
		ステップを更新する関数
	****************************************************************/
	void StepUpdate();

	/***************************************************************
		描画関数
	****************************************************************/
	void Draw();

	/***************************************************************
		ゲッター関数
	****************************************************************/
	inline const __int8 GetPosX()  const { return m_PosX;    }
	inline const __int8 GetPosY()  const { return m_PosY;    }
	inline const __int8 GetWidth() const { return m_Width;   }
	inline const __int8 GetHeight()const { return m_Height;  }
	inline const bool   IsDeath()  const { return m_IsDeath; }
	
	/***************************************************************
		セッター関数
	****************************************************************/
	void SetPosX(__int8 posX_){ m_PosX = posX_;   }
	void SetPosY(__int8 posY_){ m_PosY = posY_;   }
	void Dead()				  { m_IsDeath = true; }

private:
	/***************************************************************
		初期化関数
	****************************************************************/
	void Initializ();


private:

	// X座標
	__int8 m_PosX;

	// Y座標
	__int8 m_PosY;

	// オブジェクトが死んでいるかどうか
	bool m_IsDeath;

	// 横幅
	const __int8 m_Width;

	// 高さ
	const __int8 m_Height;

	// オブジェクトの種類
	const __int8 m_Type;

	// ブロックの現在のSTEPを保存する変数
	BlockStep m_CurrentStep;
};


#endif